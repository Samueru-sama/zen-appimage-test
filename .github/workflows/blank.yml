name: Appimage
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: "0 16 1/7 * *"
  workflow_dispatch:
jobs:
  build:
    name: "${{ matrix.name }} (${{ matrix.arch }})"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            name: "Build AppImage"
            arch: x86_64
          - runs-on: ubuntu-24.04-arm
            name: "Build AppImage"
            arch: aarch64
    steps:
    - uses: actions/checkout@v4

    - name: Make AppImage
      run: |
        sudo apt install wget tar dconf-gsettings-backend p11-kit-modules libgtk-3-0t64 libgdk-pixbuf-2.0-0 libasound2t64 libegl1 \
          libpulse0 libegl-mesa0 libxcb-dri3-0 libxcb-dri2-0 libxcursor1 libxinerama1 libxcb-glx0 libxcb-icccm4 libpci3 zsync 
        chmod +x ./*-appimage.sh
        ./*-appimage.sh
        mkdir dist
        mv *.AppImage* dist/

    - name: Check version file
      run: |
       cat ~/version
       echo "APP_VERSION=$(cat ~/version)" >> "${GITHUB_ENV}"

    - name: Upload artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: AppImage-${{ matrix.arch }}
        path: 'dist'

    - name: Upload version file
      uses: actions/upload-artifact@v4.6.2
      with:
       name: version
       path: ~/version
       overwrite: true

  release:
      needs: [build]
      permissions: write-all
      runs-on: ubuntu-latest

      steps:
        - uses: actions/download-artifact@v4.3.0
          with:
            name: AppImage-x86_64

        - uses: actions/download-artifact@v4.3.0
          with:
            name: AppImage-aarch64

        - uses: actions/download-artifact@v4.3.0
          with:
            name: version

        - name: Read version
          run: |
            cat version
            export VERSION="$(cat version)"
            echo "APP_VERSION=${VERSION}" >> "${GITHUB_ENV}"

        #Version Release
        - name: Del Previous Release
          run: |
            gh release delete "${APP_VERSION}" --repo "${GITHUB_REPOSITORY}" --cleanup-tag  -y
            sleep 5
          env:
            GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          continue-on-error: true
        - name: Continuous Releaser
          uses: softprops/action-gh-release@v2
          with:
            name: "Zen-test AppImage ${{ env.APP_VERSION }}"
            tag_name: "${{ env.APP_VERSION }}"
            prerelease: false
            draft: false
            generate_release_notes: false
            make_latest: true
            files: |
              *.AppImage*
          continue-on-error: false

        #Snapshot Release
        - name: Get Date
          run: |
            SNAPSHOT_TAG="$(date --utc +'%Y%m%d-%H%M%S')"
            echo SNAPSHOT_TAG="${SNAPSHOT_TAG}" >> "${GITHUB_ENV}"
          continue-on-error: false
        - name: Snapshot Releaser
          uses: softprops/action-gh-release@v2
          with:
            name: "Snapshot ${{ env.APP_VERSION }}"
            tag_name: "${{ env.SNAPSHOT_TAG }}"
            prerelease: false
            draft: false
            generate_release_notes: false
            make_latest: false
            files: |
              *.AppImage*
          continue-on-error: false
